# https://taskfile.dev

version: '3'
interval: '200ms'

tasks:
# top level task targets

  build-macos-bin:
    sources:
      - ./**/*.go
    generates:
      - bunny
    cmds:
      # - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -gcflags="all=-N -l" -o bunny ./
      - CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -gcflags="all=-N -l" -o bunny ./

  build-linux-bin:
    sources:
      - ./**/*.go
    generates:
      - bunny
    cmds:
      # - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -gcflags="all=-N -l" -o bunny ./
      - CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -gcflags="all=-N -l" -o bunny ./

  build-docker-image:
    deps: [build-linux-bin, configure-docker]
    sources:
      - "{{.ROOT_DIR}}/bunny"
      - "{{.ROOT_DIR}}/deploy/containers/bunny/Dockerfile"
    status:
      - docker image inspect bunny:latest
    dir: ./deploy/containers/bunny/
    cmds:
      - cp "{{.ROOT_DIR}}/bunny" "{{.ROOT_DIR}}/deploy/containers/bunny/"
      - defer: rm "{{.ROOT_DIR}}/deploy/containers/bunny/bunny"
      - docker build -t bunny .

  configure-docker:
    cmds:
      # - ctlptl docker-desktop open
      # - ctlptl docker-desktop set vm.resources.cpus 4
      # - ctlptl docker-desktop set vm.resources.memoryMiB 8192
      # - ctlptl docker-desktop set vm.kubernetes.enabled false
      - ctlptl apply -f deploy/ctlptl/docker-desktop.yaml

  add-telepresence-helm-repo:
    cmds:
      - helm repo add datawire https://app.getambassador.io
    status:
      - helm repo list | grep '^datawire'

  install-telepresence:
    deps: [configure-docker, add-telepresence-helm-repo]
    cmds:
      - helm repo update
      - kubectl create namespace ambassador
      - helm install traffic-manager --wait --namespace ambassador datawire/telepresence
    status:
      - helm list -A | grep '^traffic-manager[[:space:]]*ambassador'

  # create-bunny-deployment:

  # create-bunny-secret:

  # create-bunny-service:
  #   status:
  #     - kubectl get service bunny

  start-telepresence:
    deps: [install-telepresence, create-bunny-deployment, create-bunny-secret, create-bunny-service]
    cmds:
      - telepresence connect
      # - curl -ik https://kubernetes.default
      - telepresence intercept bunny --port 1312:1312 --env-file "{{.ROOT_DIR}}/deploy/kubernetes/bunny.telepresence-env"


  # create-registry:
  #   deps: [configure-docker]
  #   cmds:
  #     - ctlptl apply -f deploy/ctlptl/registry.yaml

  # destroy-registry:
  #   deps: [configure-docker]
  #   cmds:
  #     - ctlptl delete -f deploy/ctlptl/registry.yaml

  # list-images:
  #   cmds:
  #     - reg ls --force-non-ssl localhost:5000

  # create-kind-cluster:
  #   deps: [configure-docker, create-registry]
  #   cmds:
  #     - ctlptl apply -f deploy/ctlptl/kind.yaml

  # destroy-kind-cluster:
  #   deps: [configure-docker]
  #   cmds:
  #     - ctlptl delete -f deploy/ctlptl/kind.yaml

  # start-tilt:
  #   deps: [create-kind-cluster]
  #   vars:
  #     REGISTRY_ADDRESS:
  #       sh: ctlptl get cluster kind-scruffy -o json | jq -r '.status.localRegistryHosting.host'
  #   cmds:
  #     - tilt up