egress:
  #  TODO-LOW: docs on how to create liveness, readiness, and startup probe equivalents
  # make sure to update README.md (in both the "Pod Spec" and "Config File" sections)
  probes:
    - name: "alpha"
      metrics:
        attempts:
          name: "egress_probe_alpha_attempts"
          enabled: true
          extraLabels:
            - name: "egress_probe_alpha_test_label_name"
              value: "egress-probe-alpha-test-label-value"
        responseTime:
          name: "egress_probe_alpha_response_time"
          enabled: true
          extraLabels: []
      httpGet:
        # TODO-LOW: we should add support for TLS with self-signed certs (which we check against a copy in a Secret)
        host: "localhost"
        httpHeaders:
          - name: "x-bunny-test-header-name"
            value: "test-value"
          - name: "x-bunny-test-header-name2"
            value: "test-value2"
        port: 2624
        path: "healthz"
    - name: "beta"
      metrics:
        attempts:
          name: "egress_probe_beta_attempts"
          enabled: false
          extraLabels:
            - name: "egress_probe_beta_test_label_name"
              value: "egress-probe-beta-test-label-value"
        responseTime:
          name: "egress_probe_beta_response_time"
          enabled: true
      httpGet:
        host: "localhost"
        port: 2624
        path: "healthz"
  initialDelayMilliseconds: 0
  periodMilliseconds: 3000
  timeoutMilliseconds: 2000
ingress:
  httpServer:
    port: 1312
    readTimeoutMilliseconds: 5000
    readHeaderTimeoutMilliseconds: 5000
    writeTimeoutMilliseconds: 10000
    idleTimeoutMilliseconds: 2000
    maxHeaderBytes: 10000
    openTelemetryMetricsPath: "otel-metrics"
    prometheusMetricsPath: "prom-metrics"
    # TODO-LOW: update README.md (in both the "Pod Spec" and "Config File" sections) on how this block works
    health:
      - path: "healthz-liveness"
        instantQuery:
          queryTimeout: "5s"
          queryRelativeInstantTime: "-5s"
          query: "1.0 >= bool 0.2"
      - path: "healthz-readiness"
        rangeQuery:
          queryTimeout: "5s"
          queryRelativeStartTime: "-5s"
          queryRelativeEndTime: "0s"
          queryInterval: "1s"
          query: "1.0 >= bool 0.2"
  # TODO-LOW: rename this to "metrics" (to match up with what we use in egress)
  prometheus:
    extraLabels:
      - name: "bunny-test-ingress-label-name"
        value: "bunny-test-ingress-label-value"
    metricsEnabled:
      - "ingress_health_attempts"
signals:
  watchedProcessName: "sleep"